// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewSystem.Data;

#nullable disable

namespace NewSystem.Data.Migrations
{
    [DbContext(typeof(NewSystemContext))]
    [Migration("20250923210127_InitWithSeed")]
    partial class InitWithSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("NewSystem.Domain.PowerCrushPlayer.Players", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id")
                        .HasAnnotation("Sqlite:Autoincrement", true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Points");

                    b.HasKey("Id");

                    b.ToTable("Players", "dbo");
                });

            modelBuilder.Entity("NewSystem.Domain.PowerCrushProduct.Products", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("Code");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CategoryId");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT")
                        .HasColumnName("ImageUrl");

                    b.Property<bool>("IsComposed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsComposed");

                    b.HasKey("Code");

                    b.ToTable("Products", "dbo");
                });

            modelBuilder.Entity("NewSystem.Domain.ToolsIoan.ToolsIoans", b =>
                {
                    b.Property<int>("ToolIoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ToolIoanId");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ClientName");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT")
                        .HasColumnName("Comments");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsActive");

                    b.Property<int>("NumberIoan")
                        .HasColumnType("INTEGER")
                        .HasColumnName("NumberIoan");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("ReturnDate");

                    b.Property<string>("ToolsIoanStatus")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ToolsIoanStatus");

                    b.Property<string>("ToolsLoanDetails")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ToolsLoanDetails");

                    b.Property<int>("TotalItems")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TotalItems");

                    b.HasKey("ToolIoanId");

                    b.ToTable("ToolsIoan", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
